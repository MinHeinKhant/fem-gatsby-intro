{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./node_modules/gatsby-plugin-mdx/index.js","webpack:///./src/components/styledComponents/readLink.js","webpack:///./node_modules/gatsby-plugin-mdx/mdx-renderer.js"],"names":["query","PostTemplate","post","data","mdx","frontmatter","title","css","author","body","to","MDXRenderer","require","module","ReadLink","Link","React","useMDXComponents","useMDXScope","scope","components","children","props","mdxComponents","mdxScope","End","fullScope","keys","Object","values","key","fn"],"mappings":"6FAAA,2GAOaA,EAAK,Y,6CA8BHC,UAjBM,SAAC,GAA6B,IAAdC,EAAa,EAA1BC,KAAQC,IAC9B,OACE,YAAC,IAAD,KACE,sBAAKF,EAAKG,YAAYC,OACtB,iBACEC,IAAG,GADL,aAKaL,EAAKG,YAAYG,QAE9B,YAAC,cAAD,KAAcN,EAAKO,MACnB,YAAC,IAAD,CAAUC,GAAG,KAAb,0B,uBC1BN,IAAMC,EAAcC,EAApB,QAEAC,UAAiB,CACfF,YAAaA,I,8DCNTG,EAAW,YAAOC,IAAP,qBAAH,gEAKCD,O,qrECRf,IAAME,EAAQJ,EAAd,Q,EACkCA,EAAQ,QAAlCK,E,EAAAA,iBAAkBb,E,EAAAA,IAClBc,EAAgBN,EAAQ,QAAxBM,YAERL,UAAiB,SAAqB,GAKlC,IAJFM,EAIC,EAJDA,MACAC,EAGC,EAHDA,WACAC,EAEC,EAFDA,SACGC,E,oIACF,sCACKC,EAAgBN,EAAtB,GACMO,EAAWN,EAFhB,GAKKO,EAAMT,EAAA,SAAc,WACxB,MACE,OAAO,KAGT,IAAMU,EAAS,GAGbV,MAHa,EAIbZ,OAJF,GAQMuB,EAAOC,YAAb,GACMC,EAASF,EAAA,KAAS,SAAAG,GAAG,OAAIJ,EAAJ,MAG3B,OAFQ,mCAAR,KAEOK,2BAAP,OACC,CAACV,EAlBJ,IAoBA,OAAOL,EAAA,mBAA2BI,WAAYG,GAA9C","file":"component---src-templates-post-js-6e1e3d9030667003c47e.js","sourcesContent":["import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport { css } from \"@emotion/core\";\nimport Layout from \"../components/layout/layout\";\nimport ReadLink from \"../components/styledComponents/readLink\";\nimport { MDXRenderer } from \"gatsby-plugin-mdx\";\n\nexport const query = graphql`\n  query($slug: String!) {\n    mdx(frontmatter: { slug: { eq: $slug } }, body: {}) {\n      frontmatter {\n        slug\n        author\n        title\n      }\n      body\n    }\n  }\n`;\n\nconst PostTemplate = ({ data: { mdx: post } }) => {\n  return (\n    <Layout>\n      <h1>{post.frontmatter.title}</h1>\n      <p\n        css={css`\n          font-size: 1.2rem;\n        `}\n      >\n        posted by {post.frontmatter.author}\n      </p>\n      <MDXRenderer>{post.body}</MDXRenderer>\n      <ReadLink to=\"/\">&larr; back to all posts</ReadLink>\n    </Layout>\n  );\n};\n\nexport default PostTemplate;\n","/**\n * Welcome to gatsby-plugin-mdx!\n *\n * Start reading in gatsby-node.js\n */\n\nconst MDXRenderer = require(`./mdx-renderer`)\n\nmodule.exports = {\n  MDXRenderer: MDXRenderer,\n}\n","import styled from \"@emotion/styled\";\nimport { Link } from \"gatsby\";\n\nconst ReadLink = styled(Link)`\n  display: inline-block;\n  font-size: 1.4rem;\n`;\n\nexport default ReadLink;\n","const React = require(`react`)\nconst { useMDXComponents, mdx } = require(`@mdx-js/react`)\nconst { useMDXScope } = require(`./context`)\n\nmodule.exports = function MDXRenderer({\n  scope,\n  components,\n  children,\n  ...props\n}) {\n  const mdxComponents = useMDXComponents(components)\n  const mdxScope = useMDXScope(scope)\n\n  // Memoize the compiled component\n  const End = React.useMemo(() => {\n    if (!children) {\n      return null\n    }\n\n    const fullScope = {\n      // React is here just in case the user doesn't pass them in\n      // in a manual usage of the renderer\n      React,\n      mdx,\n      ...mdxScope,\n    }\n\n    const keys = Object.keys(fullScope)\n    const values = keys.map(key => fullScope[key])\n    const fn = new Function(`_fn`, ...keys, `${children}`)\n\n    return fn({}, ...values)\n  }, [children, scope])\n\n  return React.createElement(End, { components: mdxComponents, ...props })\n}\n"],"sourceRoot":""}